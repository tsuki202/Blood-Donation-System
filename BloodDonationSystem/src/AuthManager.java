import java.io.*;
import java.util.*;

class AuthManager {
    private Registration registration;
    private Scanner scanner;

    public AuthManager() {
        this.registration = new Registration();
        this.scanner = new Scanner(System.in);
    }

    public void start() {
        while (true) {
            showMenu();
            int choice = getUserChoice();

            switch (choice) {
                case 1 -> loginUser();
                case 2 -> registerUser();
                case 3 -> exitProgram();
                default -> System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
            }
        }
    }

    private void exitProgram() {
        System.out.println("–í–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏. –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!");
        System.exit(0);
    }

    private void showMenu() {
        System.out.println("\nüìå –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:");
        System.out.println("1Ô∏è‚É£ - –í—Ö—ñ–¥");
        System.out.println("2Ô∏è‚É£ - –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è");
        System.out.println("3Ô∏è‚É£ - –í–∏—Ö—ñ–¥");
    }

    private int getUserChoice() {
        System.out.print("üîπ –í–∞—à –≤–∏–±—ñ—Ä: ");
        while (!scanner.hasNextInt()) {
            System.out.println("‚ö† –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ!");
            scanner.next();
        }
        int choice = scanner.nextInt();
        scanner.nextLine(); // –û—á–∏—â–µ–Ω–Ω—è –±—É—Ñ–µ—Ä–∞
        return choice;
    }

    private void loginUser() {
        System.out.print("\nüë§ –í–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω: ");
        String username = scanner.nextLine().trim();
        System.out.print("üîë –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine();

        if (registration.userExists(username) && registration.getPassword(username).equals(password)) {
            String role = registration.getRole(username);
            if ("ADMIN".equals(role)) {
                new Admin(username, registration).showMenu();
            } else if ("–î–û–ù–û–†".equals(role)) {
                new Donor(username, registration).showMenu();
            } else {
                new Recipient(username, registration).showMenu();
            }
        } else {
            System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å.");
        }
    }

    private void registerUser() {
        System.out.print("\nüÜï –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –ª–æ–≥—ñ–Ω: ");
        String username = scanner.nextLine().trim();

        if (registration.userExists(username)) {
            System.out.println("‚ùå –õ–æ–≥—ñ–Ω –≤–∂–µ –∑–∞–π–Ω—è—Ç–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à–∏–π.");
        } else {
            System.out.print("üîë –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å: ");
            String password = scanner.nextLine();

            System.out.print("üîë –í–≤–µ–¥—ñ—Ç—å —Ä–æ–ª—å (ADMIN/–î–û–ù–û–†/–†–ï–¶–ò–ü–Ü–Ñ–ù–¢): ");
            String role = scanner.nextLine().trim().toUpperCase();

            if (!role.equals("ADMIN") && !role.equals("–î–û–ù–û–†") && !role.equals("–†–ï–¶–ò–ü–Ü–Ñ–ù–¢")) {
                System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∞ —Ä–æ–ª—å. –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –±—É–¥–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ä–æ–ª—å –†–ï–¶–ò–ü–Ü–Ñ–ù–¢.");
                role = "–†–ï–¶–ò–ü–Ü–Ñ–ù–¢";
            }

            registration.register(username, password, role);
        }
    }
}